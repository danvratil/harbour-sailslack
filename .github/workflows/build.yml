name: Github CI build

on:
  push:
    tags:
      - '*'
  pull_request:
    branches:
      - master

env:
  RELEASE: 4.3.0.12

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Prepare
      env:
        SLACK_CLIENT_ID: ${{ secrets.SLACK_CLIENT_ID }}
        SLACK_CLIENT_SECRET: ${{ secrets.SLACK_CLIENT_SECRET }}
      run: |
        git submodule init
        git submodule update
        echo slack_client_id=${SLACK_CLIENT_ID} > .qmake.conf
        echo slack_client_secret=${SLACK_CLIENT_SECRET} >> .qmake.conf
        mkdir output

    - name: Build armv7hl
      run: docker run --rm --privileged -v $PWD:/share coderus/sailfishos-platform-sdk:$RELEASE /bin/bash -c "
            mkdir -p build ;
            cd build ;
            cp -r /share/. . ;
            mb2 -t SailfishOS-$RELEASE-armv7hl build --enable-debug ;
            sudo cp -r RPMS/*.rpm /share/output"

    - name: Build aarch64
      run: docker run --rm --privileged -v $PWD:/share coderus/sailfishos-platform-sdk:$RELEASE /bin/bash -c "
            mkdir -p build ;
            cd build ;
            cp -r /share/. . ;
            mb2 -t SailfishOS-$RELEASE-aarch64 build --enable-debug ;
            sudo cp -r RPMS/*.rpm /share/output"

    - name: Build i486
      run: docker run --rm --privileged -v $PWD:/share coderus/sailfishos-platform-sdk:$RELEASE /bin/bash -c "
            mkdir -p build ;
            cd build ;
            cp -r /share/. . ;
            mb2 -t SailfishOS-$RELEASE-i486 build --enable-debug ;
            sudo cp -r RPMS/*.rpm /share/output"

    - name: Upload build result
      uses: actions/upload-artifact@v2
      with:
        name: output-rpms
        path: output

    - name: Create release
      if: contains(github.ref, 'release')
      run: |
        set -x
        assets=()
        for asset in output/*.rpm; do
          assets+=("-a" "$asset")
        done
        tag_name="${GITHUB_REF##*/}"
        hub release create "${assets[@]}" -m "$tag_name" "$tag_name"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

